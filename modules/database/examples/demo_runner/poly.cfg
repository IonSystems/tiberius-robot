-------------------------------------------------------------------------------
--                       P O L Y H E D R A    D E M O
--                   Copyright (C) 2005-2014 by Enea Software AB
-------------------------------------------------------------------------------
--    Filename      : poly.cfg
--    Description   : config file
--    Author        : Nigel Day
--
--    CVSID         : $Id: poly.cfg,v 1.9 2014/01/06 14:49:02 andy Exp $
-------------------------------------------------------------------------------
-- NOTE: this is ILLUSTRATIVE CODE, provided on an 'as is' basis to help
-- demonstrate one or more features of the Polyhedra product.
-- It may well need adaption for use in a live installation, and
-- Enea Software AB and its agents and distributors do not warrant this code.
-------------------------------------------------------------------------------     

common:
data_service   = 8001

DB:common
type	       = rtrdb
suppress_dvi   = true
suppress_log   = true
load_file      = test.dat
enable_parallel_allocator=true

SQL:common
type	       = sqlc

-------------------------------------------------------------------------------
-- entry point for 'runner' application, which automagically will start and
-- restart the database and its helpers, and also monitor to ensure that 
-- connections are accepted.
-------------------------------------------------------------------------------

runner:
type             = clc

-- what class should we instantiate?
root_class       = Monitor

-- where should w find the class definition?
cl_library       = runner
-- notes: 
-- (1) .cl is assumed if no filename extension is given
-- (2) we could have used a relative or absolute path,
--     viz ../demo_runner/runner, should the runner.cl
--     file be in a different directory

-- the rest of the resources are ignored by the CLC engine, 
-- but are accessible to the CL programmer. The runner program
-- uses certain resoureces to tell it what to do:

-- what database are we monitoring?
monitor		 = 8001

-- what entry point in poly.cfg shall be used when initiating the database?
dbname           = db

-- every so many seconds, disconnect and reconnect to the
-- database, as a simple check of it being alive:
checkdelay       = 60

-- give a comma-separated set of one-shot clients/operations
clients          = query 8001

-- give a comma-separated set of commands to initiate the ongoing clients;
-- if any of these terminate whilst the db is running, we restart them.
autoclients      = animate,active

-- should we be strict about whether the database is already running?
-- for purposes of demonstration, we shall be lax - but be warned that
-- in this case there may already be 'animate' & 'active' clients running
-- with potentially confusing changes occuring to the data.
allowDbAtStart   = yes


-------------------------------------------------------------------------------
--                        E n d   o f   f i l e
-------------------------------------------------------------------------------

